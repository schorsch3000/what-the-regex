[
  {
    "title": "A dot is a dot",
    "desc": "inside a character-class [] a dot is a dot no special meaning",
    "regex": "^[.]*$",
    "samples": [
      "foo",
      "...",
      "???",
      "***"
    ]
  },
  {
    "title": "A question mark is a question mark",
    "desc": "inside a character-class [] a question mark is a question mark no special meaning",
    "regex": "^[?]*$",
    "samples": [
      "foo",
      "...",
      "???",
      "***"
    ]
  },
  {
    "title": "A asterisk is a asterisk",
    "desc": "inside a character-class [] a asterisk is a asterisk no special meaning",
    "regex": "^[*]*$",
    "samples": [
      "foo",
      "...",
      "???",
      "***"
    ]
  },
  {
    "title": "The hyphen",
    "desc": "A hyphen surrounded by characters inside a character class makes a range",
    "regex": "^[b-c]$",
    "samples": [
      "a",
      "b",
      "c",
      "d",
      "-"
    ]
  },
  {
    "title": "The hyphen",
    "desc": "A hyphen starting a character class means a hyphen",
    "regex": "^[-1b]$",
    "samples": [
      "a",
      "b",
      "1",
      "2",
      "-"
    ]
  },
  {
    "title": "The hyphen",
    "desc": "A hyphen ending a character class means a hyphen",
    "regex": "^[1b-]$",
    "samples": [
      "a",
      "b",
      "1",
      "2",
      "-",
      "\\"
    ]
  },
  {
    "title": "Useless backslash",
    "desc": "A backslash inside a character class, if not before a special char, is, depending on the engine, either useless, syntactically incorrect or a literal backslash",
    "regex": "^[1b\\-]$",
    "samples": [
      "a",
      "b",
      "1",
      "2",
      "-",
      "\\"
    ]
  },
  {
    "title": "Real backslash",
    "desc": "A double (or escaped) backslash inside a character class represents a backslash",
    "regex": "^[1b\\\\-]$",
    "samples": [
      "a",
      "b",
      "1",
      "2",
      "-",
      "\\"
    ]
  },
  {
    "title": "What a dot misses",
    "desc": [
      "A dot matches every character, right?",
      "Nope, a dot matches everything but linebreaks"
    ],
    "regex": "^.*$",
    "samples": [
      "foo",
      "bar",
      "foo bar",
      "foo\nbar",
      "xxx"
    ]
  },
  {
    "title": "What \uD83D\uDCA9 a dot matches",
    "desc": [
      "A dot matches more than text..."
    ],
    "regex": "^.*$",
    "samples": [
      "✔",
      "↑",
      "\uD83D\uDCA9",
      "♻",
      "↵",
      "⌫"
    ]
  },
  {
    "title": "What negated character classes includes",
    "desc": [
      "[^x] behaves like a dot except it not matches an x?",
      "Nope, in fact it matches newlines."
    ],
    "regex": "^[^x]*$",
    "samples": [
      "foo",
      "bar",
      "foo bar",
      "foo\nbar",
      "xxx"
    ]
  },
  {
    "title": "Quantifiers",
    "desc": [
      "there are lots of quantifiers in regex",
      "Lets cover some of them: ? * + {}",
      "? Makes the preceding item optional, it matches one time if possible."
    ],
    "regex": "^a?$",
    "samples": [
      "",
      "a",
      "aa",
      "aaa",
      "aaaa",
      "aaaaa",
      "aaaaaa",
      "aaaaaaa"
    ]
  },
  {
    "title": "Quantifiers",
    "desc": [
      "there are lots of quantifiers in regex",
      "Lets cover some of them: ? * + {}",
      "* Makes the preceding item optional, it matches as often as possible."
    ],
    "regex": "^a*$",
    "samples": [
      "",
      "a",
      "aa",
      "aaa",
      "aaaa",
      "aaaaa",
      "aaaaaa",
      "aaaaaaa"
    ]
  },
  {
    "title": "Quantifiers",
    "desc": [
      "there are lots of quantifiers in regex",
      "Lets cover some of them: ? * + {}",
      "+ Makes the preceding item mandatory, it matches as often as possible."
    ],
    "regex": "^a+$",
    "samples": [
      "",
      "a",
      "aa",
      "aaa",
      "aaaa",
      "aaaaa",
      "aaaaaa",
      "aaaaaaa"
    ]
  },
  {
    "title": "Quantifiers",
    "desc": [
      "there are lots of quantifiers in regex",
      "Lets cover some of them: ? * + {}",
      "Within { and } you can set the minimal and maximal occurence of the preceding item, e.g.:",
      " - {0,1} is the same as ?",
      " - {3,5} matches everiting between 3 and 5 times"
    ],
    "regex": "^a{3,5}$",
    "samples": [
      "",
      "a",
      "aa",
      "aaa",
      "aaaa",
      "aaaaa",
      "aaaaaa",
      "aaaaaaa"
    ]
  },
  {
    "title": "Quantifiers",
    "desc": [
      "there are lots of quantifiers in regex",
      "Lets cover some of them: ? * + {}",
      "Within { and } you can set the minimal and maximal occurence of the preceding item, e.g.:",
      "the last number can be omitted, so no maximum limit is given eg:",
      " - {0,} is the same as *",
      " - {0,} is the same as *"
    ],
    "regex": "^a{2,}$",
    "samples": [
      "",
      "a",
      "aa",
      "aaa",
      "aaaa",
      "aaaaa",
      "aaaaaa",
      "aaaaaaa"
    ]
  }
]
